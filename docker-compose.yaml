version: '3.8'
services:
  product-service-database:
    image: postgres:16-alpine
    container_name: product-service-database
    environment:
      - 'POSTGRES_DB=postgres'
      - 'POSTGRES_PASSWORD=postgres'
      - 'POSTGRES_USER=postgres'
    ports:
      - '5432:5432'
    command: 
      - "postgres"
      - "-c"
      - "wal_level=logical"
      - "-c" 
      - "max_wal_senders=10"
      - "-c"
      - "max_replication_slots=10"
    volumes:
      - 'product-postgres:/var/lib/postgresql/data'
  
  spring-cloud-gateway:
    image: spring-cloud-gateway
    container_name: spring-cloud-gateway
    ports:
      - '8080:8080'
    depends_on:
      - eureka-server
  eureka-server:
    image: eureka-server
    container_name: eureka-server
    ports:
      - "8761:8761"
    environment:
      - SPRING_PROFILES_ACTIVE=prod
      - EUREKA_CLIENT_REGISTER_WITH_EUREKA=false
      - EUREKA_CLIENT_FETCH_REGISTRY=false
      - EUREKA_SERVER_WAIT_TIME_IN_MS_WHEN_SYNC_EMPTY=0
  user-service-database:
    image: postgres:16-alpine
    container_name: user-service-database
    environment:
      - 'POSTGRES_DB=postgres'
      - 'POSTGRES_PASSWORD=postgres'
      - 'POSTGRES_USER=postgres'
    ports:
      - '5433:5432'
    volumes:
      - 'user-service-database:/var/lib/postgresql/data'
  user-service-redis:
    image: redis:7-alpine
    container_name: user-service-redis
    ports:
      - '6379:6379'
    command: redis-server --requirepass ${REDIS_PASSWORD:-password}
    volumes:
      - 'user-service-redis:/data'
  user-service-app:
    image: 'user-service-app'
    container_name: user-service-app
    ports:
      - '3000:3000'
    environment:
      - NODE_ENV=production
      - HOST=user-service-app
      - PORT=3000
      # Database Configuration
      - DB_USERNAME=postgres
      - DB_PASSWORD=postgres
      - DB_NAME=postgres
      - DB_HOST=user-service-database
      - DB_PORT=5432
      # Redis Configuration
      - REDIS_HOST=user-service-redis
      - REDIS_PORT=6379
      - REDIS_PASSWORD=password
      - REDIS_DB=0
      # Eureka Configuration
      - EUREKA_HOST=eureka-server
      - EUREKA_PORT=8761
      # API Gateway Configuration
      - API_GATEWAY_URL=http://spring-cloud-gateway:8080
      # auth service client id
      - AUTH_SERVICE_CLIENT_ID=user-service-client
      # auth service client secret
      - AUTH_SERVICE_CLIENT_SECRET=erAxi3pe5aqA6I1SFmA844H9bdhYHy4e
      # JWT Configuration
      - JWT_SECRET=your-secret-key
    depends_on:
      - 'user-service-database'
      - 'user-service-redis'
  auth-service-app:
    image: auth-service-app
    container_name: auth-service-app
    ports:
      - "8081:8081"
    environment:
      - SPRING_DATA_REDIS_HOST=auth-service-redis
      - SPRING_DATA_REDIS_PORT=6379
      - EUREKA_CLIENT_SERVICEURL_DEFAULTZONE=http://eureka-server:8761/eureka/
      - SPRING_SECURITY_OAUTH2_RESOURCESERVER_JWT_ISSUER_URI=http://keycloak:8080/realms/lynx-realm
      - SPRING_SECURITY_OAUTH2_CLIENT_REGISTRATION_KEYCLOAK_CLIENT_ID=auth-client
      - SPRING_SECURITY_OAUTH2_CLIENT_REGISTRATION_KEYCLOAK_CLIENT_SECRET=iNesonR4Ay1UldduIoQ96Rqe3UFgChP2
      - SPRING_SECURITY_OAUTH2_RESOURCESERVER_JWT_JWK_SET_URI=http://keycloak:8080/realms/lynx-realm/protocol/openid-connect/certs
      - SPRING_SECURITY_OAUTH2_CLIENT_PROVIDER_KEYCLOAK_ISSUER_URI=http://keycloak:8080/realms/lynx-realm
      - SPRING_SECURITY_OAUTH2_CLIENT_REGISTRATION_KEYCLOAK_TOKEN_URI=http://keycloak:8080/realms/lynx-realm/protocol/openid-connect/token
    depends_on:
      - keycloak
      - auth-service-redis

  keycloak:
    image: keycloak/keycloak
    container_name: keycloak
    command: start-dev
    environment:
      KEYCLOAK_ADMIN: admin
      KEYCLOAK_ADMIN_PASSWORD: admin
      KC_DB: postgres
      KC_DB_URL: jdbc:postgresql://auth-service-database:5432/keycloak
      KC_DB_USERNAME: keycloak
      KC_DB_PASSWORD: keycloak
      KC_HEALTH_ENABLED: true
      KC_METRICS_ENABLED: true
    ports:
      - "8088:8080"
    depends_on:
      - auth-service-database
  auth-service-database:
    image: postgres:16-alpine
    container_name: auth-service-database
    environment:
      POSTGRES_DB: keycloak
      POSTGRES_USER: keycloak
      POSTGRES_PASSWORD: keycloak
    ports:
      - "6001:5432"
    volumes:
      - auth-service-database:/var/lib/postgresql/data

  auth-service-redis:
    image: redis:7-alpine
    container_name: auth-service-redis
    ports:
      - "6380:6379"
    volumes:
      - auth-service-redis:/data
  elasticsearch:
    image: elasticsearch:8.18.0
    container_name: elasticsearch
    ports:
      - "9200:9200"
    environment:
      - "discovery.type=single-node"
      - "ES_JAVA_OPTS=-Xms1g -Xmx1g"
      - ELASTIC_PASSWORD=elastic
    volumes:
      - elasticsearch-data:/usr/share/elasticsearch/data
volumes:
  product-postgres:
  user-service-database:
  user-service-redis:
  auth-service-database:
  auth-service-redis:
  elasticsearch-data:
